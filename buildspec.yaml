version: 0.2
phases:
  install:
    runtime-versions:
      java: corretto8 
      docker: 18
  pre_build:
    commands:
      - echo Installing amazon-eks dependencies...
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.16.13/2020-08-04/bin/linux/amd64/kubectl 
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region us-west-2 --no-include-email)
      - IMAGE_NAME=tomcat-aws-eks-test
      - aws ecr describe-repositories --repository-names $IMAGE_NAME || aws ecr create-repository --repository-name $IMAGE_NAME
      - REPOSITORY_URI=612768910590.dkr.ecr.us-west-2.amazonaws.com/$IMAGE_NAME
      - IMAGE_TAG=latest
      - echo Logging in to Amazon EKS...
      - aws eks update-kubeconfig --name aws-eks-terraform --region us-west-2 --role-arn arn:aws:iam::612768910590:role/codebuild-kubectl-role
  build:
    commands:
      - echo Build started on `date`
      - mvn clean package
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo push completed on `date`
      # - kubectl apply -f tomcat-aws-eks.yml
      #- kubectl delete -f tomcat-aws-eks.yml
      #- sleep 150
      #- kubectl get po,svc,ing

#docker login -u AWS -p $(aws ecr get-login-password) https://$(aws sts get-caller-identity --query 'Account' --output text).dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
#a056e2a247a8349d58b26433b1e11fe5-1849920046.us-west-2.elb.amazonaws.com